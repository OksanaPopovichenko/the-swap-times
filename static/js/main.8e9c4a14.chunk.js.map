{"version":3,"sources":["images/icons/swap.svg","components/News/News.js","images/logo.svg","images/icons/cross.svg","components/Category/Category.js","pages/homepage/components.js","services/index.js","services/loader.service.js","pages/homepage/homepage.js","components/Loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["News","props","useState","isFlipped","setFlipped","list","setList","news","getRelevant","id","size","useEffect","handleClick","a","newArr","Grid","container","direction","className","wrap","justifyContent","infinite","Card","alignItems","onClick","src","swap","alt","Typography","variant","style","backgroundImage","image","align","title","description","Category","color","data","removeCategory","justify","cross","Categories","categoriesList","map","item","NewsSuggetions","newsList","setNewsList","loaderService","this","loaderState$","BehaviorSubject","state","next","apiUrl","categories","Homepage","allLiked","setAllLikedCategories","likedList","setLikes","allDisliked","setAllDislikedCategories","dislikedList","setDislikes","suggestions","setSuggestions","setNews","getAllNews","Set","checkDislikes","hideDislikedNews","categoryParams","filter","x","indexOf","join","url","randomNumber","setLoaderState","axios","get","result","getMainNews","arr","getSuggestions","items","some","includes","splice","category","categoryIndex","Math","round","random","categoryName","newItem","logo","preventSwipe","onSwipe","dir","likedArr","dislikedArr","GlobalLoader","showLoader","setShowLoader","sub$","subscribe","unsubscribe","type","height","width","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9c4a14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/swap.a0ec5c2c.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from '@material-ui/core';\nimport swap from '../../images/icons/swap.svg';\nimport './News.scss';\nimport ReactCardFlip from 'react-card-flip';\n\nconst News = (props) => {\n    const [isFlipped, setFlipped] = useState(false);\n    const [list, setList] = useState([]);\n\n    const { news, getRelevant, id, size } = props;\n    \n    useEffect(() => {\n        setList(news);\n    }, [news]);\n\n    const handleClick = async () => {\n        setFlipped(!isFlipped);\n        let newArr = await getRelevant(id);\n        setList(newArr[id]);\n    }\n\n    return (\n        <Grid container\n            direction=\"column\"\n            className={`news-${size}`}\n            wrap=\"nowrap\"\n            justifyContent=\"center\">\n            <ReactCardFlip isFlipped={isFlipped} infinite={true}>\n                <Card news={list} size={size} />\n                <Card news={list} size={size} />\n            </ReactCardFlip>\n\n            {size !== \"big\" ?\n                <Grid className=\"swap-block\"\n                    container\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    onClick={handleClick}>\n                    <img src={swap} alt=\"swap\" className=\"swap-icon\" />\n                    <Typography variant=\"body1\">Swap news</Typography>\n                </Grid>\n                : null}\n        </Grid>\n    );\n};\nexport default News;\n\nfunction Card(props) {\n    const { news, size } = props;\n\n    return (\n        <Grid container\n            direction=\"column\"\n            className={`news news-${size}`}\n            justifyContent=\"flex-end\"\n            style={{ backgroundImage: news.image ? `url(${news.image})` : 'url(https://ik.imagekit.io/7xe1jiffo71/no-image_xp4URuufd.png?updatedAt=1628851158021)' }}>\n\n            <Grid className=\"content-wrap\">\n                <Typography variant=\"h6\" align=\"left\" className=\"title\">\n                    {news.title}\n                </Typography>\n                <Typography variant=\"body1\" align=\"left\" className=\"description\">\n                    {news.description}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/logo.4e2a09ab.svg\";","export default __webpack_public_path__ + \"static/media/cross.d3877505.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from '@material-ui/core';\nimport cross from '../../images/icons/cross.svg';\nimport './Category.scss';\n\nconst Category = (props) => {\n    const { color, data, removeCategory } = props;\n\n    const deleteItem = (item) => {\n        if(color == \"green\") {\n            removeCategory(item, \"like\");\n        } else {\n            removeCategory(item, \"dislike\");\n        }\n    }\n\n    return (\n        <Grid container\n            className={`category category-${color}`}\n            direction=\"row\"\n            justify=\"space-between\"\n            wrap=\"nowrap\">\n            <Typography variant=\"body1\" className=\"category-name\">{data}</Typography>\n            <img src={cross} alt=\"cross\" onClick={() => deleteItem(data)}/>\n        </Grid>\n    );\n};\n\nexport default Category;","import React, { useState, useEffect } from \"react\";\nimport { Grid } from '@material-ui/core';\nimport Category from '../../components/Category/Category';\nimport News from '../../components/News/News';\n\nexport const Categories = (props) => {\n    const [ categoriesList, setList ] = useState([]);\n    const { list, color } = props.data;\n\n    useEffect(() => {\n        setList(list);\n    }, [list])\n\n    return (\n        <Grid className=\"categories\">\n            {categoriesList.map((item, id) => {\n                return (\n                    <Category key={id} color={color} data={item} removeCategory={props.removeCategory} />\n                )\n            })}\n        </Grid>\n\n    )\n}\n\nexport const NewsSuggetions = (props) => {\n    const [newsList, setNewsList] = useState([]);\n    const { news, size } = props.data;\n\n    useEffect(() => {\n        setNewsList(news);\n    }, [news])\n\n    return (\n        <Grid className=\"wrapper\"\n            container\n            direction=\"row\"\n            wrap=\"nowrap\">\n            {newsList.map((item, id) => {\n                return <News key={id}\n                    size={size}\n                    news={item}\n                    id={id}\n                    getRelevant={props.getRelevant}\n                />\n            })}\n        </Grid>\n\n    )\n}\n","import { LoaderService } from \"./loader.service\";\n\nexport const loaderService  = new LoaderService();\n\nexport default {\n    loaderService\n}\n","import {BehaviorSubject} from \"rxjs\";\n\n\nexport class LoaderService {\n    loaderState$;\n    constructor() {\n        this.loaderState$ = new BehaviorSubject(null);\n    }\n\n    setLoaderState(state) {\n        this.loaderState$.next(state);\n    }\n\n}\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from '@material-ui/core';\nimport News from '../../components/News/News';\nimport TinderCard from 'react-tinder-card'\nimport logo from \"../../images/logo.svg\";\nimport axios from 'axios';\nimport { Categories, NewsSuggetions } from \"./components\";\nimport { loaderService } from \"../../services\";\nimport '../../styles/responsive.scss';\n\nconst ACCESS_KEY = '0903149d2c4fc6ac74bffc7410592d70';\n\nconst apiUrl = `https://api.mediastack.com/v1/news?access_key=${ACCESS_KEY}`;\nconst categories = ['general', 'business', 'entertainment', 'health', 'science', 'sports', 'technology'];\n\nconst Homepage = () => {\n    const [allLiked, setAllLikedCategories] = useState([]); // with duplication\n    const [likedList, setLikes] = useState([]); // without duplication\n\n    const [allDisliked, setAllDislikedCategories] = useState([]); // with duplication\n    const [dislikedList, setDislikes] = useState([]); // without duplication\n\n    const [suggestions, setSuggestions] = useState([]);\n    const [news, setNews] = useState([]);\n\n    useEffect(() => {\n        getAllNews();\n    }, []);\n\n    useEffect(() => {\n        setLikes([...new Set(allLiked)]); // eliminate duplication of categories\n    }, [allLiked]);\n\n    useEffect(() => {\n        checkDislikes([...new Set(allLiked)]);\n        setDislikes([...new Set(allDisliked)]); // eliminate duplication of categories\n        hideDislikedNews([...new Set(allDisliked)]);\n    }, [allDisliked]);\n\n    /* Get news for all available categories */\n    const getAllNews = async () => {\n        let categoryParams = categories.filter(function (x) {\n            return allDisliked.indexOf(x) < 0;\n        }).join(',-');\n\n        let url = apiUrl + `&categories=${categoryParams}` + `&countries=us,-fr&languages=en,-fr&limit=10&offset=${randomNumber()}`;\n\n        loaderService.setLoaderState(true);\n        let result = await axios.get(url);\n        setNews(result.data.data);\n        loaderService.setLoaderState(false);\n    }\n\n    /* News swipe function */\n    const swiped = (direction, category) => {\n        if (direction == \"right\") {\n            setAllLikedCategories(likedArr => [...likedArr, category]);\n        } else {\n            setAllDislikedCategories(dislikedArr => [...dislikedArr, category]);\n        }\n    }\n\n    /* Get new news based on categories preferences */\n    const getMainNews = async () => {\n        let categoryParams = categories.filter(function (x) {\n            return [...new Set(allDisliked)].indexOf(x) < 0;\n        }).join(',-');\n\n        let url = apiUrl + `&categories=${categoryParams}` + `&countries=us,-fr&languages=en,-fr&limit=10&offset=${randomNumber()}`;\n        loaderService.setLoaderState(true);\n        let result = await axios.get(url);\n        setNews(result.data.data);\n        loaderService.setLoaderState(false);\n    }\n\n    /* Get suggestions news based on categories preferences */\n    const hideDislikedNews = (arr) => {\n        let categoryParams = categories.filter(function (x) {\n            return arr.indexOf(x) < 0;\n        }).join(',-');\n\n        getSuggestions(categoryParams);\n        getMainNews();\n    }\n\n    /* Check if the category you don't like is in the like list */\n    const checkDislikes = (items) => {\n        likedList.some(item => {\n            if (items.includes(item)) {\n                likedList.splice(likedList.indexOf(item), 1);\n                setAllLikedCategories(likedList);\n            }\n        });\n    }\n\n    /* Remove category from Liked and Disliked lists */\n    const removeCategory = (category, direction) => {\n        let categoryIndex;\n        if (direction == \"like\") {\n            categoryIndex = likedList.indexOf(category);\n            if (categoryIndex > -1) {\n                likedList.splice(categoryIndex, 1);\n            }\n            setAllLikedCategories(likedList);\n        } else {\n            categoryIndex = dislikedList.indexOf(category);\n            if (categoryIndex > -1) {\n                dislikedList.splice(categoryIndex, 1);\n            }\n            setAllDislikedCategories(dislikedList);\n        }\n    }\n\n    /* Generate a random number for an offset for an API call */\n    const randomNumber = () => {\n        return Math.round(Math.random() * (100 - 1) + 1);\n    }\n\n    /* Get news suggetions */\n    const getSuggestions = async (categories) => {\n        const url = apiUrl + `&categories=${categories}` + `&countries=us,-fr&languages=en,-fr&limit=10&offset=${randomNumber()}`;\n        loaderService.setLoaderState(true);\n        let result = await axios.get(url);\n        setSuggestions(result.data.data);\n        loaderService.setLoaderState(false);\n    }\n\n    /* On Swipe news get relevant news */\n    const getRelevant = async (id) => {\n        let categoryName = suggestions[id].category;\n\n        const url = apiUrl + `&categories=${categoryName}&countries=us,-fr&languages=en,-fr&limit=1&offset=${randomNumber()}`;\n        loaderService.setLoaderState(true);\n        let newItem = await axios.get(url);\n        suggestions[id] = newItem.data.data[0];\n        setSuggestions(suggestions);\n        loaderService.setLoaderState(false);\n\n        return suggestions;\n    }\n\n    return (\n        <Grid>\n            <Grid className=\"main-block\"\n                container\n                alignItems=\"center\"\n                direction=\"column\">\n                <img src={logo} alt=\"logo\" className=\"logo\" />\n                <Grid className=\"news-block container\"\n                    container\n                    alignItems='stretch'\n                    justifyContent=\"space-between\">\n                    <Grid className=\"categories-wrap swipe-left\">\n                        <Typography variant=\"h5\">Swipe Left</Typography>\n                        <Typography variant=\"body1\" className=\"text\">if you are not interested in this news</Typography>\n                        <Typography variant=\"h6\">You don’t like</Typography>\n\n                        <Categories data={{\n                            list: dislikedList,\n                            color: 'red'\n                        }}\n                        removeCategory={removeCategory} />\n                    </Grid>\n\n                    <Grid className=\"swapper\">\n                        {news.map((item, id) =>\n                            <TinderCard\n                                className='swipe'\n                                key={id}\n                                preventSwipe={[\"up\", \"down\"]}\n                                onSwipe={(dir) => swiped(dir, item.category)}>\n                                <News size=\"big\" news={item} />\n                            </TinderCard>\n                        )}\n                    </Grid>\n\n                    <Grid className=\"categories-wrap swipe-right\">\n                        <Typography variant=\"h5\">Swipe Right</Typography>\n                        <Typography variant=\"body1\" className=\"text\">if you are interested in this news</Typography>\n                        <Typography variant=\"h6\">You like</Typography>\n\n                        <Categories data={{\n                            list: likedList,\n                            color: 'green'\n                        }}\n                            removeCategory={removeCategory} />\n                    </Grid>\n                </Grid>\n            </Grid>\n\n\n            <Grid className=\"suggestions-block\">\n                <Grid className=\"container\">\n                    <Typography variant=\"h6\">News suggestions</Typography>\n                    <Typography variant=\"body1\" className=\"text\">Based on what you like</Typography>\n                </Grid>\n\n\n                <NewsSuggetions data={{\n                    size: \"small\",\n                    news: suggestions\n                }}\n                getRelevant={getRelevant} />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Homepage;","import React, { useEffect, useState } from \"react\";\nimport { loaderService } from \"../../services\";\nimport './Loader.scss';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport const GlobalLoader = () => {\n    const [showLoader, setShowLoader] = useState(true);\n\n    useEffect(() => {\n       const sub$ = loaderService.loaderState$.subscribe(state => {\n            setShowLoader(state);\n        });\n            \n        return () => {\n            sub$ && sub$.unsubscribe();\n        }\n    });\n\n    return (\n        <div>\n            {\n                showLoader && <div className=\"loader\">\n                    <Loader\n                        type=\"Oval\"\n                        color=\"#1976d2\"\n                        height={100}\n                        width={100}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Grid } from '@material-ui/core';\nimport './App.scss';\nimport Homepage from \"./pages/homepage/homepage\";\nimport { GlobalLoader } from \"./components/Loader/Loader\";\n\n\nfunction App() {\n\n\treturn (\n\t\t<Grid className=\"App\">\n\t\t\t<GlobalLoader />\n\t\t\t<Homepage />\n\t\t</Grid>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.scss';\nimport './index.css';\nimport './styles/global.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}